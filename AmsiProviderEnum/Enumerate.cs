using System;
using System.Reflection;
using System.Runtime.InteropServices;
using Microsoft.Win32;

class ProviderEnum
{
    const string ClsidRegistryPath = @"Software\Classes\CLSID";
    const string AmsiProviderRegistryPath = @"Software\Microsoft\AMSI\Providers";

    public static void Main()
    {
        foreach (var dllPath in EnumerateAmsiProviders())
        {
            Console.WriteLine($"[*] Provider DLL: {dllPath}");

        }
    }
   
    public static List<String> EnumerateAmsiProviders()
    {
        var result = new List<String>();
        try
        {
            using (RegistryKey clsidKey = Registry.LocalMachine.OpenSubKey(AmsiProviderRegistryPath))
            {
                if (clsidKey != null)
                {
                    foreach (string clsid in clsidKey.GetSubKeyNames())
                    {
                        Console.WriteLine($"CLSID: {clsid}");

                        // Look up the CLSID 
                        using (RegistryKey amsiProviderKey = Registry.LocalMachine.OpenSubKey($"{ClsidRegistryPath}\\{clsid}\\InProcServer32"))
                        {
                            if (amsiProviderKey != null)
                            {
                                object amsiProviderDLL = amsiProviderKey.GetValue(null);

                                if (amsiProviderDLL != null)
                                {
                                    Console.WriteLine($"InProcServer32 Value for CLSID {clsid}: {amsiProviderDLL}");
                                    result.Add(amsiProviderDLL.ToString());
                                }
                                else
                                {
                                    Console.WriteLine($"InProcServer32 Value not found for CLSID {clsid}");
                                }
                            }
                            else
                            {
                                Console.WriteLine($"  No AMSI Provider information found for CLSID {clsid}");
                            }
                        }
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error enumerating AMSI providers: {ex.Message}");
        }

        return result;
    }
}
